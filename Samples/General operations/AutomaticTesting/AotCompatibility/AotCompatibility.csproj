<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <!--
      Without these properties, publishing sometimes shows errors:
      1. About missing RuntimeIdentifier. This error might also happen, when only
         RuntimeIdentifiers is used.
      2. `The runtime pack for Microsoft.NETCore.App.Runtime.win-x64 was not downloaded`, when only
         RuntimeIdentifier is used.
     -->
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <RuntimeIdentifiers>win-x64</RuntimeIdentifiers>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <PublishAot>true</PublishAot>
    <TrimmerSingleWarn>false</TrimmerSingleWarn>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningsAsErrors />
    <InvariantGlobalization>true</InvariantGlobalization>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="..\Docotic.Tests\Helpers\DocoticLicense.cs" Link="DocoticLicense.cs" />
    <Compile Include="..\Docotic.Tests\Helpers\PdfSaver.cs" Link="PdfSaver.cs" />
    <Compile Include="..\Docotic.Tests\Helpers\PdfTextExtractor.cs" Link="PdfTextExtractor.cs" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="BitMiracle.Docotic.Pdf" Version="9.7.18373" />
  </ItemGroup>
  <!--
    Uncomment to force clean before building. It will fix the following scenario:
    1. Publishing fails because of some AOT or trim warnings
    2. You run Build (not a Rebuild) for TrimTest again
    => The publishing now succeeds.

    That happens because the project is already built and warnings are not reported during the repeating publishing.
    It's worth to always run Rebuild when there are warnings. Or uncomment the code below.
  -->
  <!--<Target Name="PreBuildClean" BeforeTargets="PreBuildEvent" Condition="'$(Configuration)' == 'Installer' And '$(PublishProtocol)'==''">
    <CallTarget Targets="Clean" />
  </Target>-->
  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="'$(Configuration)' == 'Release' And '$(PublishProtocol)'==''">
    <Exec Command="&quot;$(SolutionDir)publish.bat&quot;" />
  </Target>
</Project>